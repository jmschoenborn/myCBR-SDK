Difference Nr. 1: The content of the function has changed: The function setName(Input types: final String) was updated (in class DefaultCaseBase)
Difference Nr. 2: The content of the function has changed: The function Project(Input types: final String) was updated (in class Project)
Difference Nr. 3: The content of the function has changed: The function initSVDesc(Input types: -) was updated (in class Project)
Difference Nr. 4: The content of the function has changed: The function load(Input types: -) was updated (in class Project)
Difference Nr. 5: The content of the function has changed: The function save(Input types: -) was updated (in class Project)
Difference Nr. 6: The content of the function has changed: The function initFcts(Input types: -) was updated (in class Project)
Difference Nr. 7: The content of the function has changed: The function calculateMultipleAttributeSimilarity(Input types: final Object final MultipleAttribute<?> final MultipleAttribute<?>) was updated (in class Project)
Difference Nr. 8: The content of the function has changed: The function removeCase(Input types: String) was updated (in class Project)
Difference Nr. 9: Import added: Import org.apache.log4j.LogManager was added to class ConceptRange
Difference Nr. 10: Import added: Import org.apache.log4j.Logger was added to class ConceptRange
Difference Nr. 11: Attribute added: The attribute LOGGER was added to class ConceptRange
Difference Nr. 12: Function added: The function removeCaseByName (Input types: String) was added to class ConceptRange
Difference Nr. 13: The content of the function has changed: The function getAttribute(Input types: final Object) was updated (in class ConceptRange)
Difference Nr. 14: The content of the function has changed: The function remove(Input types: String) was updated (in class ConceptRange)
Difference Nr. 15: Function added: The function IntervalAttribute (Input types: final IntervalDesc final double final double) was added to class IntervalAttribute
Difference Nr. 16: Function added: The function IntervalAttribute (Input types: final IntervalDesc final Pair<Double, Double>) was added to class IntervalAttribute
Difference Nr. 17: Attribute now has another data type: The attribute interval was a Pair<Number, Number> once, now it's a Pair<Double, Double> (in class IntervalAttribute)
Difference Nr. 18: Function deleted (or renamed): The function IntervalAttribute (Input types: final IntervalDesc final float final float) got deleted in class IntervalAttribute
Difference Nr. 19: Function deleted (or renamed): The function IntervalAttribute (Input types: final IntervalDesc final Pair<Number, Number>) got deleted in class IntervalAttribute
Difference Nr. 20: Function has a new return value type: The function getInterval (Input types: -) (class: IntervalAttribute) had a return value of the type Number>, but now it is Double>
Difference Nr. 21: The content of the function has changed: The function equals(Input types: Object) was updated (in class IntervalAttribute)
Difference Nr. 22: Function added: The function getIntervalValue (Input types: finalPair<Double, Double>) was added to class IntervalRange
Difference Nr. 23: Attribute now has another data type: The attribute atts was a HashMap<Pair<Number, Number>, IntervalAttribute> once, now it's a HashMap<Pair<Double, Double>, IntervalAttribute> (in class IntervalRange)
Difference Nr. 24: The content of the function has changed: The function IntervalRange(Input types: final Project final IntervalDesc) was updated (in class IntervalRange)
Difference Nr. 25: Function deleted (or renamed): The function getIntervalValue (Input types: finalPair<Number, Number>) got deleted in class IntervalRange
Difference Nr. 26: The content of the function has changed: The function getAttribute(Input types: final Object) was updated (in class IntervalRange)
Difference Nr. 27: The content of the function has changed: The function cleanData(Input types: -) was updated (in class IntervalRange)
Difference Nr. 28: The content of the function has changed: The function parseValue(Input types: final String) was updated (in class IntervalRange)
Difference Nr. 29: The content of the function has changed: The function toString(Input types: -) was updated (in class MultipleAttribute)
Difference Nr. 30: Import added: Import java.util.Arrays was added to class BooleanDesc
Difference Nr. 31: Import added: Import java.util.Set was added to class BooleanDesc
Difference Nr. 32: Function added: The function getAttribute (Input types: Object) was added to class BooleanDesc
Difference Nr. 33: Function added: The function getAttribute (Input types: final String) was added to class BooleanDesc
Difference Nr. 34: Function added: The function getAllowedValues (Input types: -) was added to class BooleanDesc
Difference Nr. 35: The content of the function has changed: The function BooleanDesc(Input types: Concept String) was updated (in class BooleanDesc)
Difference Nr. 36: The content of the function has changed: The function getBooleanAttribute(Input types: Boolean) was updated (in class BooleanDesc)
Difference Nr. 37: The content of the function has changed: The function isAllowedValue(Input types: String) was updated (in class BooleanDesc)
Difference Nr. 38: Function deleted (or renamed): The function getAttribute (Input types: final Object) got deleted in class BooleanDesc
Difference Nr. 39: Import added: Import org.apache.log4j.LogManager was added to class Concept
Difference Nr. 40: Import added: Import org.apache.log4j.Logger was added to class Concept
Difference Nr. 41: Attribute added: The attribute LOGGER was added to class Concept
Difference Nr. 42: Function added: The function getRange (Input types: -) was added to class Concept
Difference Nr. 43: The content of the function has changed: The function delete(Input types: -) was updated (in class Concept)
Difference Nr. 44: Import added: Import java.text.ParseException was added to class IntervalDesc
Difference Nr. 45: Function added: The function IntervalDesc (Input types: final Concept final String final double final double) was added to class IntervalDesc
Difference Nr. 46: Function added: The function getIntervalAttribute (Input types: final double final double) was added to class IntervalDesc
Difference Nr. 47: Function added: The function getAttribute (Input types: Object) was added to class IntervalDesc
Difference Nr. 48: Function added: The function setMin (Input types: final double) was added to class IntervalDesc
Difference Nr. 49: Function added: The function setMax (Input types: final double) was added to class IntervalDesc
Difference Nr. 50: Attribute now has another data type: The attribute min was a Number once, now it's a double (in class IntervalDesc)
Difference Nr. 51: Attribute now has another data type: The attribute max was a Number once, now it's a double (in class IntervalDesc)
Difference Nr. 52: Function deleted (or renamed): The function IntervalDesc (Input types: final Concept final String final Number final Number) got deleted in class IntervalDesc
Difference Nr. 53: Function deleted (or renamed): The function getIntervalAttribute (Input types: final Number final Number) got deleted in class IntervalDesc
Difference Nr. 54: Function has a new return value type: The function getMin (Input types: -) (class: IntervalDesc) had a return value of the type Number, but now it is double
Difference Nr. 55: Function deleted (or renamed): The function setMin (Input types: final Number) got deleted in class IntervalDesc
Difference Nr. 56: Function has a new return value type: The function getMax (Input types: -) (class: IntervalDesc) had a return value of the type Number, but now it is double
Difference Nr. 57: Function deleted (or renamed): The function setMax (Input types: final Number) got deleted in class IntervalDesc
Difference Nr. 58: The content of the function has changed: The function canOverride(Input types: final AttributeDesc) was updated (in class IntervalDesc)
Difference Nr. 59: The content of the function has changed: The function check(Input types: final IntervalAttribute) was updated (in class IntervalDesc)
Difference Nr. 60: Import added: Import org.apache.log4j.LogManager was added to class SpecialDesc
Difference Nr. 61: Import added: Import org.apache.log4j.Logger was added to class SpecialDesc
Difference Nr. 62: Attribute added: The attribute LOGGER was added to class SpecialDesc
Difference Nr. 63: The content of the function has changed: The function getDefault(Input types: -) was updated (in class SpecialDesc)
Difference Nr. 64: Import added: Import org.apache.log4j.LogManager was added to class SymbolDesc
Difference Nr. 65: Import added: Import org.apache.log4j.Logger was added to class SymbolDesc
Difference Nr. 66: Attribute added: The attribute LOGGER was added to class SymbolDesc
Difference Nr. 67: The content of the function has changed: The function addOrderedSymbolFct(Input types: final String final boolean) was updated (in class SymbolDesc)
Difference Nr. 68: Functions finality changed: The function getAllowedValues(Input types: -) is now not final (in class SymbolDesc)
Difference Nr. 69: Import added: Import org.apache.log4j.LogManager was added to class Retrieval
Difference Nr. 70: Import added: Import org.apache.log4j.Logger was added to class Retrieval
Difference Nr. 71: Attribute added: The attribute LOGGER was added to class Retrieval
Difference Nr. 72: The content of the function has changed: The function run(Input types: -) was updated (in class Retrieval)
Difference Nr. 73: Import added: Import java.util.HashSet was added to class AdvancedDoubleFct
Difference Nr. 74: Import added: Import java.util.Set was added to class AdvancedDoubleFct
Difference Nr. 75: Function added: The function setSymmetric (Input types: boolean) was added to class AdvancedDoubleFct
Difference Nr. 76: Function added: The function removeAdditionalPoint (Input types: Double) was added to class AdvancedDoubleFct
Difference Nr. 77: The content of the function has changed: The function addAdditionalPoint(Input types: Double Similarity) was updated (in class AdvancedDoubleFct)
Difference Nr. 78: Import added: Import java.util.HashSet was added to class AdvancedFloatFct
Difference Nr. 79: Import added: Import java.util.Set was added to class AdvancedFloatFct
Difference Nr. 80: Function added: The function setSymmetric (Input types: boolean) was added to class AdvancedFloatFct
Difference Nr. 81: Function added: The function removeAdditionalPoint (Input types: Double) was added to class AdvancedFloatFct
Difference Nr. 82: The content of the function has changed: The function addAdditionalPoint(Input types: Double Similarity) was updated (in class AdvancedFloatFct)
Difference Nr. 83: Import added: Import java.util.HashSet was added to class AdvancedIntegerFct
Difference Nr. 84: Import added: Import java.util.Set was added to class AdvancedIntegerFct
Difference Nr. 85: Function added: The function setSymmetric (Input types: boolean) was added to class AdvancedIntegerFct
Difference Nr. 86: Function added: The function removeAdditionalPoint (Input types: Double) was added to class AdvancedIntegerFct
Difference Nr. 87: The content of the function has changed: The function addAdditionalPoint(Input types: Double Similarity) was updated (in class AdvancedIntegerFct)
Difference Nr. 88: Import added: Import org.apache.log4j.LogManager was added to class AmalgamationFct
Difference Nr. 89: Import added: Import org.apache.log4j.Logger was added to class AmalgamationFct
Difference Nr. 90: Attribute added: The attribute LOGGER was added to class AmalgamationFct
Difference Nr. 91: The content of the function has changed: The function AmalgamationFct(Input types: AmalgamationConfig Concept HashMap<String, Number> String) was updated (in class AmalgamationFct)
Difference Nr. 92: The content of the function has changed: The function AmalgamationFct(Input types: AmalgamationConfig Concept String) was updated (in class AmalgamationFct)
Difference Nr. 93: The content of the function has changed: The function calculateSimilarity(Input types: Attribute Attribute) was updated (in class AmalgamationFct)
Difference Nr. 94: Function added: The function setSymmetric (Input types: boolean) was added to class DoubleFct
Difference Nr. 95: Function added: The function setSymmetric (Input types: boolean) was added to class FloatFct
Difference Nr. 96: Function added: The function setSymmetric (Input types: boolean) was added to class IntegerFct
Difference Nr. 97: Import added: Import org.apache.log4j.LogManager was added to class OrderedSymbolFct
Difference Nr. 98: Import added: Import org.apache.log4j.Logger was added to class OrderedSymbolFct
Difference Nr. 99: Attribute added: The attribute LOGGER was added to class OrderedSymbolFct
Difference Nr. 100: The content of the function has changed: The function updateTable(Input types: -) was updated (in class OrderedSymbolFct)
Difference Nr. 101: The content of the function has changed: The function update(Input types: Observable Object) was updated (in class OrderedSymbolFct)
Difference Nr. 102: Import added: Import org.apache.log4j.LogManager was added to class Similarity
Difference Nr. 103: Import added: Import org.apache.log4j.Logger was added to class Similarity
Difference Nr. 104: Attribute added: The attribute LOGGER was added to class Similarity
Difference Nr. 105: The content of the function has changed: The function updateRoundedValue(Input types: -) was updated (in class Similarity)
Difference Nr. 106: Import added: Import org.apache.log4j.LogManager was added to class SpecialFct
Difference Nr. 107: Import added: Import org.apache.log4j.Logger was added to class SpecialFct
Difference Nr. 108: Attribute added: The attribute LOGGER was added to class SpecialFct
Difference Nr. 109: The content of the function has changed: The function calculateSimilarity(Input types: SpecialAttribute SpecialAttribute) was updated (in class SpecialFct)
Difference Nr. 110: Import added: Import java.util.Arrays was added to class StringFct
Difference Nr. 111: Attribute added: The attribute values was added to class StringFct
Difference Nr. 112: Attribute added: The attribute PARAM_DEL_COST was added to class StringFct
Difference Nr. 113: Attribute added: The attribute PARAM_ADD_COST was added to class StringFct
Difference Nr. 114: Attribute added: The attribute PARAM_CHANGE_COST was added to class StringFct
Difference Nr. 115: Function added: The function StringFct (Input types: Project StringDesc String) was added to class StringFct
Difference Nr. 116: Function added: The function initConfigParams (Input types: -) was added to class StringFct
Difference Nr. 117: Function added: The function setConfig (Input types: StringConfig) was added to class StringFct
Difference Nr. 118: Function added: The function setParameter (Input types: int Number) was added to class StringFct
Difference Nr. 119: Function added: The function getParameter (Input types: int) was added to class StringFct
Difference Nr. 120: Attribute deleted (or renamed): The attribute n got deleted in class StringFct
Difference Nr. 121: Attribute deleted (or renamed): The attribute levenshteinDelCost got deleted in class StringFct
Difference Nr. 122: Attribute deleted (or renamed): The attribute levenshteinAddCost got deleted in class StringFct
Difference Nr. 123: Attribute deleted (or renamed): The attribute levenshteinChangeCost got deleted in class StringFct
Difference Nr. 124: The content of the function has changed: The function getLevenshteinDelCost(Input types: -) was updated (in class StringFct)
Difference Nr. 125: The content of the function has changed: The function setLevenshteinDelCost(Input types: int) was updated (in class StringFct)
Difference Nr. 126: The content of the function has changed: The function getLevenshteinAddCost(Input types: -) was updated (in class StringFct)
Difference Nr. 127: The content of the function has changed: The function setLevenshteinAddCost(Input types: int) was updated (in class StringFct)
Difference Nr. 128: The content of the function has changed: The function getLevenshteinChangeCost(Input types: -) was updated (in class StringFct)
Difference Nr. 129: The content of the function has changed: The function setLevenshteinChangeCost(Input types: int) was updated (in class StringFct)
Difference Nr. 130: The content of the function has changed: The function StringFct(Input types: Project StringConfig StringDesc String) was updated (in class StringFct)
Difference Nr. 131: The content of the function has changed: The function calculateSimilarity(Input types: Attribute Attribute) was updated (in class StringFct)
Difference Nr. 132: The content of the function has changed: The function nGramSimilarity(Input types: String String) was updated (in class StringFct)
Difference Nr. 133: The content of the function has changed: The function levenshteinSimilarity(Input types: String String) was updated (in class StringFct)
Difference Nr. 134: The content of the function has changed: The function getN(Input types: -) was updated (in class StringFct)
Difference Nr. 135: The content of the function has changed: The function setN(Input types: int) was updated (in class StringFct)
Difference Nr. 136: The content of the function has changed: The function clone(Input types: AttributeDesc boolean) was updated (in class StringFct)
Difference Nr. 137: Import added: Import org.apache.log4j.LogManager was added to class SymbolFct
Difference Nr. 138: Import added: Import org.apache.log4j.Logger was added to class SymbolFct
Difference Nr. 139: Attribute added: The attribute LOGGER was added to class SymbolFct
Difference Nr. 140: The content of the function has changed: The function calculateSimilarity(Input types: Attribute Attribute) was updated (in class SymbolFct)
Difference Nr. 141: The content of the function has changed: The function setSimilarity(Input types: Attribute Attribute Similarity) was updated (in class SymbolFct)
Difference Nr. 142: Import added: Import org.apache.log4j.LogManager was added to class Taxonomy
Difference Nr. 143: Import added: Import org.apache.log4j.Logger was added to class Taxonomy
Difference Nr. 144: Attribute added: The attribute LOGGER was added to class Taxonomy
Difference Nr. 145: The content of the function has changed: The function containsAsSubnode(Input types: TaxonomyNode TaxonomyNode) was updated (in class Taxonomy)
Difference Nr. 146: The content of the function has changed: The function setSimilarity(Input types: TaxonomyNode Similarity) was updated (in class Taxonomy)
Difference Nr. 147: Import added: Import org.apache.log4j.LogManager was added to class TaxonomyFct
Difference Nr. 148: Import added: Import org.apache.log4j.Logger was added to class TaxonomyFct
Difference Nr. 149: Attribute added: The attribute LOGGER was added to class TaxonomyFct
Difference Nr. 150: The content of the function has changed: The function update(Input types: Observable Object) was updated (in class TaxonomyFct)
Difference Nr. 151: Import added: Import java.util.Arrays was added to class StringConfig
Difference Nr. 152: Attribute added: The attribute EQUALITY("Equality" was added to class StringConfig
Difference Nr. 153: Attribute added: The attribute new String[0] was added to class StringConfig
Difference Nr. 154: Attribute added: The attribute new Number[0] was added to class StringConfig
Difference Nr. 155: Attribute added: The attribute new Number[0] was added to class StringConfig
Difference Nr. 156: Attribute added: The attribute new Number[0] was added to class StringConfig
Difference Nr. 157: Attribute added: The attribute new boolean[0]) was added to class StringConfig
Difference Nr. 158: Attribute added: The attribute NGRAM("NGram" was added to class StringConfig
Difference Nr. 159: Attribute added: The attribute new String[] { "N" } was added to class StringConfig
Difference Nr. 160: Attribute added: The attribute new Number[] { 1 } was added to class StringConfig
Difference Nr. 161: Attribute added: The attribute new Number[] { Integer.MAX_VALUE } was added to class StringConfig
Difference Nr. 162: Attribute added: The attribute new Number[] { 3 } was added to class StringConfig
Difference Nr. 163: Attribute added: The attribute new boolean[] { true } ) was added to class StringConfig
Difference Nr. 164: Attribute added: The attribute LEVENSHTEIN("Levenshtein" was added to class StringConfig
Difference Nr. 165: Attribute added: The attribute new String[] { "Addition Cost" was added to class StringConfig
Difference Nr. 166: Attribute added: The attribute "Deletion Cost" was added to class StringConfig
Difference Nr. 167: Attribute added: The attribute "Change Cost" } was added to class StringConfig
Difference Nr. 168: Attribute added: The attribute new Number[] { 1 was added to class StringConfig
Difference Nr. 169: Attribute added: The attribute 1 was added to class StringConfig
Difference Nr. 170: Attribute added: The attribute 1 } was added to class StringConfig
Difference Nr. 171: Attribute added: The attribute new Number[] { Integer.MAX_VALUE was added to class StringConfig
Difference Nr. 172: Attribute added: The attribute Integer.MAX_VALUE was added to class StringConfig
Difference Nr. 173: Attribute added: The attribute Integer.MAX_VALUE } was added to class StringConfig
Difference Nr. 174: Attribute added: The attribute new Number[] { 1 was added to class StringConfig
Difference Nr. 175: Attribute added: The attribute 1 was added to class StringConfig
Difference Nr. 176: Attribute added: The attribute 1 } was added to class StringConfig
Difference Nr. 177: Attribute added: The attribute new boolean[] { true was added to class StringConfig
Difference Nr. 178: Attribute added: The attribute true was added to class StringConfig
Difference Nr. 179: Attribute added: The attribute true } ) was added to class StringConfig
Difference Nr. 180: Attribute added: The attribute displayName was added to class StringConfig
Difference Nr. 181: Attribute added: The attribute paramNames was added to class StringConfig
Difference Nr. 182: Attribute added: The attribute mins was added to class StringConfig
Difference Nr. 183: Attribute added: The attribute maxs was added to class StringConfig
Difference Nr. 184: Attribute added: The attribute defaults was added to class StringConfig
Difference Nr. 185: Attribute added: The attribute useIntegers was added to class StringConfig
Difference Nr. 186: Function added: The function StringConfig (Input types: String String[] Number[] Number[] Number[] boolean[]) was added to class StringConfig
Difference Nr. 187: Function added: The function forDisplayName (Input types: String) was added to class StringConfig
Difference Nr. 188: Function added: The function getDisplayName (Input types: -) was added to class StringConfig
Difference Nr. 189: Function added: The function getNumberOfParameters (Input types: -) was added to class StringConfig
Difference Nr. 190: Function added: The function getIndexOfParameter (Input types: String) was added to class StringConfig
Difference Nr. 191: Function added: The function getParameterNames (Input types: -) was added to class StringConfig
Difference Nr. 192: Function added: The function getParameterName (Input types: int) was added to class StringConfig
Difference Nr. 193: Function added: The function getMinimum (Input types: int) was added to class StringConfig
Difference Nr. 194: Function added: The function getDefaultValue (Input types: int) was added to class StringConfig
Difference Nr. 195: Function added: The function getCopyOfDefaults (Input types: -) was added to class StringConfig
Difference Nr. 196: Function added: The function getMaximum (Input types: int) was added to class StringConfig
Difference Nr. 197: Function added: The function isInteger (Input types: int) was added to class StringConfig
Difference Nr. 198: Function added: The function isValidValue (Input types: int Number) was added to class StringConfig
Difference Nr. 199: Attribute deleted (or renamed): The attribute EQUALITY got deleted in class StringConfig
Difference Nr. 200: Attribute deleted (or renamed): The attribute NGRAM got deleted in class StringConfig
Difference Nr. 201: Attribute deleted (or renamed): The attribute LEVENSHTEIN got deleted in class StringConfig
Difference Nr. 202: Import added: Import org.apache.log4j.LogManager was added to class CSVImporter
Difference Nr. 203: Import added: Import org.apache.log4j.Logger was added to class CSVImporter
Difference Nr. 204: Attribute added: The attribute LOGGER was added to class CSVImporter
Difference Nr. 205: The content of the function has changed: The function CSVImporter(Input types: String Concept) was updated (in class CSVImporter)
Difference Nr. 206: The content of the function has changed: The function readData(Input types: -) was updated (in class CSVImporter)
Difference Nr. 207: The content of the function has changed: The function addMissingValues(Input types: -) was updated (in class CSVImporter)
Difference Nr. 208: The content of the function has changed: The function addMissingDescriptions(Input types: -) was updated (in class CSVImporter)
Difference Nr. 209: An inner class was changed: The inner class CSVThread was updated in class CSVImporter)
Difference Nr. 210: Import added: Import java.lang.reflect.InvocationTargetException was added to class DataBaseImporter
Difference Nr. 211: Import added: Import java.net.MalformedURLException was added to class DataBaseImporter
Difference Nr. 212: Import added: Import java.net.URL was added to class DataBaseImporter
Difference Nr. 213: Import added: Import java.net.URLClassLoader was added to class DataBaseImporter
Difference Nr. 214: Import added: Import java.sql.Driver was added to class DataBaseImporter
Difference Nr. 215: Import added: Import java.text.ParseException was added to class DataBaseImporter
Difference Nr. 216: Import added: Import java.util.List was added to class DataBaseImporter
Difference Nr. 217: Import added: Import org.apache.log4j.LogManager was added to class DataBaseImporter
Difference Nr. 218: Attribute added: The attribute LOGGER was added to class DataBaseImporter
Difference Nr. 219: Attribute added: The attribute usePostgresImport was added to class DataBaseImporter
Difference Nr. 220: Attribute added: The attribute importColumns was added to class DataBaseImporter
Difference Nr. 221: Function added: The function DataBaseImporter (Input types: -) was added to class DataBaseImporter
Difference Nr. 222: Function added: The function createPostgresImporter (Input types: int Project Concept String) was added to class DataBaseImporter
Difference Nr. 223: Function added: The function createGeneralImporter (Input types: int Project Concept String) was added to class DataBaseImporter
Difference Nr. 224: Function added: The function setUsePostgresImport (Input types: boolean) was added to class DataBaseImporter
Difference Nr. 225: Function added: The function usesPostgresImport (Input types: -) was added to class DataBaseImporter
Difference Nr. 226: Function added: The function setImportColumns (Input types: List<String>) was added to class DataBaseImporter
Difference Nr. 227: Function added: The function getImportColumns (Input types: -) was added to class DataBaseImporter
Difference Nr. 228: Function added: The function loadDriver (Input types: -) was added to class DataBaseImporter
Difference Nr. 229: Function added: The function generalConnectToDatabase (Input types: int) was added to class DataBaseImporter
Difference Nr. 230: Function added: The function getValFromConnection (Input types: Element String) was added to class DataBaseImporter
Difference Nr. 231: Attribute deleted (or renamed): The attribute logger got deleted in class DataBaseImporter
Difference Nr. 232: The content of the function has changed: The function connectToDatabase(Input types: int) was updated (in class DataBaseImporter)
Difference Nr. 233: The content of the function has changed: The function readData(Input types: String String[] String[]) was updated (in class DataBaseImporter)
Difference Nr. 234: The content of the function has changed: The function readMetaDataFromDatabase(Input types: String) was updated (in class DataBaseImporter)
Difference Nr. 235: The content of the function has changed: The function readMetaDataFromXML(Input types: -) was updated (in class DataBaseImporter)
Difference Nr. 236: The content of the function has changed: The function checkData(Input types: -) was updated (in class DataBaseImporter)
Difference Nr. 237: The content of the function has changed: The function doImport(Input types: -) was updated (in class DataBaseImporter)
Difference Nr. 238: An inner class was changed: The inner class DataBaseThread was updated in class DataBaseImporter)
Difference Nr. 239: An inner class was added: The inner class GeneralImportRunnable was added to class DataBaseImporter)
Difference Nr. 240: Import added: Import org.apache.log4j.LogManager was added to class MyCBRImporter
Difference Nr. 241: Import added: Import org.apache.log4j.Logger was added to class MyCBRImporter
Difference Nr. 242: Attribute added: The attribute LOGGER was added to class MyCBRImporter
Difference Nr. 243: The content of the function has changed: The function doImport(Input types: -) was updated (in class MyCBRImporter)
Difference Nr. 244: An inner class was changed: The inner class ConceptImporter was updated in class MyCBRImporter)
Difference Nr. 245: An inner class was changed: The inner class AttributeImporter was updated in class MyCBRImporter)
Difference Nr. 246: An inner class was changed: The inner class FunctionImporter was updated in class MyCBRImporter)
Difference Nr. 247: Import added: Import org.apache.log4j.LogManager was added to class XMLExporter
Difference Nr. 248: Import added: Import org.apache.log4j.Logger was added to class XMLExporter
Difference Nr. 249: Import added: Import de.dfki.mycbr.core.similarity.config.StringConfig was added to class XMLExporter
Difference Nr. 250: Attribute added: The attribute LOGGER was added to class XMLExporter
Difference Nr. 251: The content of the function has changed: The function save(Input types: Project String) was updated (in class XMLExporter)
Difference Nr. 252: The content of the function has changed: The function zip(Input types: String) was updated (in class XMLExporter)
Difference Nr. 253: The content of the function has changed: The function addFile(Input types: File ZipOutputStream) was updated (in class XMLExporter)
Difference Nr. 254: The content of the function has changed: The function saveInstances(Input types: OutputStreamWriter Concept) was updated (in class XMLExporter)
Difference Nr. 255: The content of the function has changed: The function saveConcept(Input types: OutputStreamWriter Concept String) was updated (in class XMLExporter)
Difference Nr. 256: The content of the function has changed: The function saveAmalgam(Input types: OutputStreamWriter AmalgamationFct String boolean) was updated (in class XMLExporter)
Difference Nr. 257: The content of the function has changed: The function saveDesc(Input types: OutputStreamWriter AttributeDesc String) was updated (in class XMLExporter)
Difference Nr. 258: The content of the function has changed: The function saveFct(Input types: OutputStreamWriter ISimFct String) was updated (in class XMLExporter)
Difference Nr. 259: The content of the function has changed: The function saveTaxonomy(Input types: OutputStreamWriter TaxonomyFct String) was updated (in class XMLExporter)
Difference Nr. 260: Import added: Import java.util.regex.Pattern was added to class XMLImporter
Difference Nr. 261: Import added: Import org.apache.log4j.LogManager was added to class XMLImporter
Difference Nr. 262: Import added: Import org.apache.log4j.Logger was added to class XMLImporter
Difference Nr. 263: Attribute added: The attribute LOGGER was added to class XMLImporter
Difference Nr. 264: The content of the function has changed: The function XMLImporter(Input types: final Project) was updated (in class XMLImporter)
Difference Nr. 265: The content of the function has changed: The function doImport(Input types: -) was updated (in class XMLImporter)
Difference Nr. 266: The content of the function has changed: The function importModel(Input types: -) was updated (in class XMLImporter)
Difference Nr. 267: An inner class was changed: The inner class ModelImporter was updated in class XMLImporter)
Difference Nr. 268: An inner class was changed: The inner class CaseImporter was updated in class XMLImporter)
Difference Nr. 269: An inner class was changed: The inner class ExplanationImporter was updated in class XMLImporter)
Difference Nr. 270: Attribute added: The attribute dbFile was added to class Database
Difference Nr. 271: Attribute added: The attribute driverURL was added to class Database
Difference Nr. 272: Function added: The function setDriverURL (Input types: String) was added to class Database
Difference Nr. 273: Function added: The function getDriverURL (Input types: -) was added to class Database
Difference Nr. 274: Function added: The function getDbFile (Input types: -) was added to class Database
Difference Nr. 275: Function added: The function setDbFile (Input types: String) was added to class Database
Difference Nr. 276: The content of the function has changed: The function getURL(Input types: -) was updated (in class Database)
Difference Nr. 277: Import added: Import org.apache.log4j.LogManager was added to class ImportTest
Difference Nr. 278: Import added: Import org.apache.log4j.Logger was added to class ImportTest
Difference Nr. 279: Attribute added: The attribute LOGGER was added to class ImportTest
Difference Nr. 280: The content of the function has changed: The function testImport(Input types: -) was updated (in class ImportTest)
Difference Nr. 281: Import added: Import org.apache.log4j.LogManager was added to class MultipleAttTest
Difference Nr. 282: Import added: Import org.apache.log4j.Logger was added to class MultipleAttTest
Difference Nr. 283: Attribute added: The attribute LOGGER was added to class MultipleAttTest
Difference Nr. 284: The content of the function has changed: The function testSymbol(Input types: -) was updated (in class MultipleAttTest)
Difference Nr. 285: The content of the function has changed: The function testConcept(Input types: -) was updated (in class MultipleAttTest)
Difference Nr. 286: Import added: Import org.apache.log4j.LogManager was added to class MyCBRImportTest
Difference Nr. 287: Import added: Import org.apache.log4j.Logger was added to class MyCBRImportTest
Difference Nr. 288: Attribute added: The attribute LOGGER was added to class MyCBRImportTest
Difference Nr. 289: The content of the function has changed: The function testMyCBRImport1(Input types: -) was updated (in class MyCBRImportTest)
Difference Nr. 290: The content of the function has changed: The function testUsedCarsFlat(Input types: -) was updated (in class MyCBRImportTest)
Difference Nr. 291: The content of the function has changed: The function testProject(Input types: -) was updated (in class MyCBRImportTest)
Difference Nr. 292: Import added: Import org.apache.log4j.LogManager was added to class RetrievalTest
Difference Nr. 293: Import added: Import org.apache.log4j.Logger was added to class RetrievalTest
Difference Nr. 294: Attribute added: The attribute LOGGER was added to class RetrievalTest
Difference Nr. 295: The content of the function has changed: The function testSequentialRetrieval(Input types: -) was updated (in class RetrievalTest)
Difference Nr. 296: The content of the function has changed: The function printResult(Input types: List<Pair<Instance, Similarity>>) was updated (in class RetrievalTest)
Difference Nr. 297: Import added: Import org.apache.log4j.LogManager was added to class StressTestFramework
Difference Nr. 298: Import added: Import org.apache.log4j.Logger was added to class StressTestFramework
Difference Nr. 299: Attribute added: The attribute LOGGER was added to class StressTestFramework
Difference Nr. 300: The content of the function has changed: The function initStressTestFramework(Input types: int int) was updated (in class StressTestFramework)
Difference Nr. 301: The content of the function has changed: The function initSymbolTestFramework(Input types: int int int int) was updated (in class StressTestFramework)
Difference Nr. 302: Import added: Import org.apache.log4j.LogManager was added to class StressTestsLoading
Difference Nr. 303: Import added: Import org.apache.log4j.Logger was added to class StressTestsLoading
Difference Nr. 304: Attribute added: The attribute LOGGER was added to class StressTestsLoading
Difference Nr. 305: The content of the function has changed: The function removeTmp(Input types: -) was updated (in class StressTestsLoading)
Difference Nr. 306: The content of the function has changed: The function testIncreasingAttributesOnly(Input types: -) was updated (in class StressTestsLoading)
Difference Nr. 307: The content of the function has changed: The function testIncreasingCasesOnly(Input types: -) was updated (in class StressTestsLoading)
Difference Nr. 308: The content of the function has changed: The function testIncreasingCasesAndAttributes(Input types: -) was updated (in class StressTestsLoading)
Difference Nr. 309: The content of the function has changed: The function testIncreasingAttributesAndCases(Input types: -) was updated (in class StressTestsLoading)
Difference Nr. 310: The content of the function has changed: The function testSymbolsIncreasingAttributesAndCases(Input types: -) was updated (in class StressTestsLoading)
Difference Nr. 311: The content of the function has changed: The function loadProject(Input types: int int) was updated (in class StressTestsLoading)
Difference Nr. 312: The content of the function has changed: The function loadSymbolsInProject(Input types: int int int int) was updated (in class StressTestsLoading)
Difference Nr. 313: Import added: Import org.apache.log4j.LogManager was added to class StressTestsRetrieval
Difference Nr. 314: Import added: Import org.apache.log4j.Logger was added to class StressTestsRetrieval
Difference Nr. 315: Attribute added: The attribute LOGGER was added to class StressTestsRetrieval
Difference Nr. 316: The content of the function has changed: The function testRetievalIncreasingCases(Input types: -) was updated (in class StressTestsRetrieval)
Difference Nr. 317: The content of the function has changed: The function testRetievalIncreasingCasesSymbols(Input types: -) was updated (in class StressTestsRetrieval)
Difference Nr. 318: Import added: Import org.apache.log4j.LogManager was added to class TestFramework
Difference Nr. 319: Import added: Import org.apache.log4j.Logger was added to class TestFramework
Difference Nr. 320: Attribute added: The attribute LOGGER was added to class TestFramework
Difference Nr. 321: The content of the function has changed: The function TestFramework(Input types: -) was updated (in class TestFramework)
Difference Nr. 322: Import added: Import org.apache.log4j.LogManager was added to class UsedCars
Difference Nr. 323: Import added: Import org.apache.log4j.Logger was added to class UsedCars
Difference Nr. 324: Attribute added: The attribute LOGGER was added to class UsedCars
Difference Nr. 325: The content of the function has changed: The function test(Input types: -) was updated (in class UsedCars)
Difference Nr. 326: Import added: Import org.apache.log4j.LogManager was added to class ConceptWith2PartOfTest
Difference Nr. 327: Import added: Import org.apache.log4j.Logger was added to class ConceptWith2PartOfTest
Difference Nr. 328: Attribute added: The attribute LOGGER was added to class ConceptWith2PartOfTest
Difference Nr. 329: The content of the function has changed: The function test(Input types: -) was updated (in class ConceptWith2PartOfTest)
Difference Nr. 330: Import added: Import org.apache.log4j.LogManager was added to class OverrideAttributeTest
Difference Nr. 331: Import added: Import org.apache.log4j.Logger was added to class OverrideAttributeTest
Difference Nr. 332: Attribute added: The attribute LOGGER was added to class OverrideAttributeTest
Difference Nr. 333: The content of the function has changed: The function setUp(Input types: -) was updated (in class OverrideAttributeTest)
Difference Nr. 334: The content of the function has changed: The function testOverrideSymbolAttribute(Input types: -) was updated (in class OverrideAttributeTest)
Difference Nr. 335: The content of the function has changed: The function testOverrideStringAttribute(Input types: -) was updated (in class OverrideAttributeTest)
Difference Nr. 336: The content of the function has changed: The function testOverrideBoolAttribute(Input types: -) was updated (in class OverrideAttributeTest)
Difference Nr. 337: The content of the function has changed: The function testOverrideConceptAttribute(Input types: -) was updated (in class OverrideAttributeTest)
Difference Nr. 338: Import added: Import org.apache.log4j.LogManager was added to class OverrideAttributeTest2
Difference Nr. 339: Import added: Import org.apache.log4j.Logger was added to class OverrideAttributeTest2
Difference Nr. 340: Attribute added: The attribute LOGGER was added to class OverrideAttributeTest2
Difference Nr. 341: The content of the function has changed: The function setUp(Input types: -) was updated (in class OverrideAttributeTest2)
Difference Nr. 342: The content of the function has changed: The function testOverrideSymbolAttribute(Input types: -) was updated (in class OverrideAttributeTest2)
Difference Nr. 343: The content of the function has changed: The function testOverrideStringAttribute(Input types: -) was updated (in class OverrideAttributeTest2)
Difference Nr. 344: The content of the function has changed: The function testOverrideBoolAttribute(Input types: -) was updated (in class OverrideAttributeTest2)
Difference Nr. 345: The content of the function has changed: The function testOverrideConceptAttribute(Input types: -) was updated (in class OverrideAttributeTest2)
Difference Nr. 346: Import added: Import org.apache.log4j.LogManager was added to class Test10000
Difference Nr. 347: Import added: Import org.apache.log4j.Logger was added to class Test10000
Difference Nr. 348: Attribute added: The attribute LOGGER was added to class Test10000
Difference Nr. 349: The content of the function has changed: The function main(Input types: String) was updated (in class Test10000)
Difference Nr. 350: Import added: Import org.apache.log4j.LogManager was added to class Test30000
Difference Nr. 351: Import added: Import org.apache.log4j.Logger was added to class Test30000
Difference Nr. 352: Attribute added: The attribute LOGGER was added to class Test30000
Difference Nr. 353: The content of the function has changed: The function main(Input types: String) was updated (in class Test30000)
Difference Nr. 354: Import added: Import org.apache.log4j.LogManager was added to class Test5000
Difference Nr. 355: Import added: Import org.apache.log4j.Logger was added to class Test5000
Difference Nr. 356: Attribute added: The attribute LOGGER was added to class Test5000
Difference Nr. 357: The content of the function has changed: The function load5000(Input types: -) was updated (in class Test5000)
Difference Nr. 358: Import added: Import org.apache.log4j.LogManager was added to class TestDataBase
Difference Nr. 359: Import added: Import org.apache.log4j.Logger was added to class TestDataBase
Difference Nr. 360: Attribute added: The attribute LOGGER was added to class TestDataBase
Difference Nr. 361: The content of the function has changed: The function main(Input types: String) was updated (in class TestDataBase)
Difference Nr. 362: Import added: Import org.apache.log4j.LogManager was added to class ConceptDescTest
Difference Nr. 363: Import added: Import org.apache.log4j.Logger was added to class ConceptDescTest
Difference Nr. 364: Attribute added: The attribute LOGGER was added to class ConceptDescTest
Difference Nr. 365: The content of the function has changed: The function test(Input types: -) was updated (in class ConceptDescTest)
Difference Nr. 366: Import added: Import org.apache.log4j.LogManager was added to class ConceptTest
Difference Nr. 367: Import added: Import org.apache.log4j.Logger was added to class ConceptTest
Difference Nr. 368: Attribute added: The attribute LOGGER was added to class ConceptTest
Difference Nr. 369: The content of the function has changed: The function test(Input types: -) was updated (in class ConceptTest)
Difference Nr. 370: Import added: Import org.apache.log4j.LogManager was added to class MoveAttDescTest
Difference Nr. 371: Import added: Import org.apache.log4j.Logger was added to class MoveAttDescTest
Difference Nr. 372: Attribute added: The attribute LOGGER was added to class MoveAttDescTest
Difference Nr. 373: The content of the function has changed: The function testMoveAttDesc(Input types: -) was updated (in class MoveAttDescTest)
Difference Nr. 374: Import added: Import org.apache.log4j.LogManager was added to class TaxonomyTest
Difference Nr. 375: Import added: Import org.apache.log4j.Logger was added to class TaxonomyTest
Difference Nr. 376: Attribute added: The attribute LOGGER was added to class TaxonomyTest
Difference Nr. 377: The content of the function has changed: The function testTaxonomy(Input types: -) was updated (in class TaxonomyTest)
Difference Nr. 378: Import added: Import org.apache.log4j.LogManager was added to class TrigramTest
Difference Nr. 379: Import added: Import org.apache.log4j.Logger was added to class TrigramTest
Difference Nr. 380: Attribute added: The attribute LOGGER was added to class TrigramTest
Difference Nr. 381: The content of the function has changed: The function testMyCBRImport(Input types: -) was updated (in class TrigramTest)
Difference Nr. 382: Class added: DriverWrapper was added

Essential tasks:

Essential task, Nr. 1: You have to add the class DriverWrapper (Package: de.dfki.mycbr.io)

General tasks:

General task, Nr. 1: You have to change the content of the function Project in the class Project (Package: de.dfki.mycbr.core)
General task, Nr. 2: You have to change the content of the function equals in the class IntervalAttribute (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 3: You have to change the content of the function test in the class UsedCars (Package: test.junittest)
General task, Nr. 4: You have to change the content of the function test in the class ConceptWith2PartOfTest (Package: test.junittest.casebase)
General task, Nr. 5: You have to change the content of the function test in the class ConceptDescTest (Package: test.junittest.model)
General task, Nr. 6: You have to change the content of the function test in the class ConceptTest (Package: test.junittest.model)
General task, Nr. 7: You have to change the content of the function getN in the class StringFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 8: You have to change the content of the function getAttribute in the class ConceptRange (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 9: You have to change the content of the function getAttribute in the class IntervalRange (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 10: You have to add the function getAttribute to the class IntervalDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 11: You have to add the function getAttribute to the class BooleanDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 12: You have to add the function getAttribute to the class BooleanDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 13: You have to change the content of the function update in the class OrderedSymbolFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 14: You have to change the content of the function remove in the class ConceptRange (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 15: You have to change the content of the function update in the class TaxonomyFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 16: You have to change the return value of the function getMax in the class IntervalDesc to double (Package: de.dfki.mycbr.core.model)
General task, Nr. 17: You have to change the content of the function calculateSimilarity in the class AmalgamationFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 18: You have to change the content of the function calculateSimilarity in the class SpecialFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 19: You have to change the content of the function calculateSimilarity in the class StringFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 20: You have to change the content of the function calculateSimilarity in the class SymbolFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 21: You have to change the return value of the function getMin in the class IntervalDesc to double (Package: de.dfki.mycbr.core.model)
General task, Nr. 22: You have to change the content of the function AmalgamationFct in the class AmalgamationFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 23: You have to change the content of the function AmalgamationFct in the class AmalgamationFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 24: You have to change the content of the function toString in the class MultipleAttribute (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 25: You have to change the content of the function check in the class IntervalDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 26: You have to add the function StringConfig to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 27: You have to change the content of the function TestFramework in the class TestFramework (Package: test.junittest)
General task, Nr. 28: You have to change the content of the function setN in the class StringFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 29: You have to change the content of the function setName in the class DefaultCaseBase (Package: de.dfki.mycbr.core)
General task, Nr. 30: You have to add the function IntervalDesc to the class IntervalDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 31: You have to change the content of the function setSimilarity in the class Taxonomy (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 32: You have to change the content of the function BooleanDesc in the class BooleanDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 33: You have to change the content of the function canOverride in the class IntervalDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 34: You have to add the function setSymmetric to the class AdvancedDoubleFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 35: You have to add the function setSymmetric to the class AdvancedFloatFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 36: You have to add the function setSymmetric to the class AdvancedIntegerFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 37: You have to add the function setSymmetric to the class DoubleFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 38: You have to add the function setSymmetric to the class FloatFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 39: You have to add the function setSymmetric to the class IntegerFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 40: You have to change the content of the function save in the class Project (Package: de.dfki.mycbr.core)
General task, Nr. 41: You have to change the content of the function clone in the class StringFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 42: You have to change the content of the inner class ModelImporter in the main class XMLImporter (Package: de.dfki.mycbr.io)
General task, Nr. 43: You have to change the content of the function parseValue in the class IntervalRange (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 44: You have to add the function setMax to the class IntervalDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 45: You have to change the content of the function setSimilarity in the class SymbolFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 46: You have to change the content of the inner class FunctionImporter in the main class MyCBRImporter (Package: de.dfki.mycbr.io)
General task, Nr. 47: You have to change the content of the function load in the class Project (Package: de.dfki.mycbr.core)
General task, Nr. 48: You have to change the content of the function calculateMultipleAttributeSimilarity in the class Project (Package: de.dfki.mycbr.core)
General task, Nr. 49: You have to add the function IntervalAttribute to the class IntervalAttribute (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 50: You have to add the function IntervalAttribute to the class IntervalAttribute (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 51: You have to change the content of the function isAllowedValue in the class BooleanDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 52: You have to change the content of the function updateTable in the class OrderedSymbolFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 53: You have to change the content of the inner class AttributeImporter in the main class MyCBRImporter (Package: de.dfki.mycbr.io)
General task, Nr. 54: You have to add the attribute LOGGER to the class XMLExporter (Package: de.dfki.mycbr.io)
General task, Nr. 55: You have to change the content of the inner class ExplanationImporter in the main class XMLImporter (Package: de.dfki.mycbr.io)
General task, Nr. 56: You have to change the content of the function cleanData in the class IntervalRange (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 57: You have to add the function setMin to the class IntervalDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 58: You have to add the import java.util.List to the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 59: You have to change the content of the function save in the class XMLExporter (Package: de.dfki.mycbr.io)
General task, Nr. 60: You have to change the content of the function zip in the class XMLExporter (Package: de.dfki.mycbr.io)
General task, Nr. 61: You have to add the attribute LOGGER to the class StressTestsLoading (Package: test.junittest)
General task, Nr. 62: You have to add the function StringFct to the class StringFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 63: You have to change the content of the function StringFct in the class StringFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 64: You have to add the attribute LOGGER to the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 65: You have to change the content of the function doImport in the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 66: You have to change the content of the function doImport in the class MyCBRImporter (Package: de.dfki.mycbr.io)
General task, Nr. 67: You have to change the content of the inner class CaseImporter in the main class XMLImporter (Package: de.dfki.mycbr.io)
General task, Nr. 68: You have to change the content of the function main in the class Test10000 (Package: test.junittest.load)
General task, Nr. 69: You have to change the content of the function main in the class Test30000 (Package: test.junittest.load)
General task, Nr. 70: You have to change the content of the function main in the class TestDataBase (Package: test.junittest.load)
General task, Nr. 71: You have to change the content of the function removeCase in the class Project (Package: de.dfki.mycbr.core)
General task, Nr. 72: You have to change the return value of the function getInterval in the class IntervalAttribute to Double> (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 73: You have to add the function getAllowedValues to the class BooleanDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 74: You have to change the data type of the attribute min in the class IntervalDesc to double (Package: de.dfki.mycbr.core.model)
General task, Nr. 75: You have to change the data type of the attribute max in the class IntervalDesc to double (Package: de.dfki.mycbr.core.model)
General task, Nr. 76: You have to change the content of the function doImport in the class XMLImporter (Package: de.dfki.mycbr.io)
General task, Nr. 77: You have to change the data type of the attribute interval in the class IntervalAttribute to Pair<Double, Double> (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 78: You have to add the function getRange to the class Concept (Package: de.dfki.mycbr.core.model)
General task, Nr. 79: You have to change the content of the function getDefault in the class SpecialDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 80: You have to change the finality of the function getAllowedValues in the class SymbolDesc from final to not final (Package: de.dfki.mycbr.core.model)
General task, Nr. 81: You have to add the attribute paramNames to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 82: You have to change the content of the inner class ConceptImporter in the main class MyCBRImporter (Package: de.dfki.mycbr.io)
General task, Nr. 83: You have to change the content of the function printResult in the class RetrievalTest (Package: test.junittest)
General task, Nr. 84: You have to add the attribute LOGGER to the class OverrideAttributeTest (Package: test.junittest.casebase)
General task, Nr. 85: You have to add the attribute LOGGER to the class OverrideAttributeTest2 (Package: test.junittest.casebase)
General task, Nr. 86: You have to add the import java.util.Set to the class AdvancedDoubleFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 87: You have to change the content of the function addAdditionalPoint in the class AdvancedDoubleFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 88: You have to add the import java.util.Set to the class AdvancedFloatFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 89: You have to change the content of the function addAdditionalPoint in the class AdvancedFloatFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 90: You have to change the content of the function addAdditionalPoint in the class AdvancedIntegerFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 91: You have to add the attribute values to the class StringFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 92: You have to add the function getDefaultValue to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 93: You have to add the attribute LOGGER to the class CSVImporter (Package: de.dfki.mycbr.io)
General task, Nr. 94: You have to add the import java.net.URL to the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 95: You have to add the import java.sql.Driver to the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 96: You have to add the attribute usePostgresImport to the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 97: You have to change the data type of the attribute atts in the class IntervalRange to HashMap<Pair<Double, Double>, IntervalAttribute> (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 98: You have to add the import java.util.Set to the class AdvancedIntegerFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 99: You have to add the function getParameter to the class StringFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 100: You have to add the attribute defaults to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 101: You have to add the function getNumberOfParameters to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 102: You have to add the function getIndexOfParameter to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 103: You have to add the attribute LOGGER to the class XMLImporter (Package: de.dfki.mycbr.io)
General task, Nr. 104: You have to add the attribute dbFile to the class Database (Package: de.dfki.mycbr.util)
General task, Nr. 105: You have to add the attribute LOGGER to the class MyCBRImportTest (Package: test.junittest)
General task, Nr. 106: You have to change the content of the function testMyCBRImport in the class TrigramTest (Package: test.junittest.similarity)
General task, Nr. 107: You have to add the attribute LOGGER to the class ConceptRange (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 108: You have to change the content of the function IntervalRange in the class IntervalRange (Package: de.dfki.mycbr.core.casebase)
General task, Nr. 109: You have to add the import java.util.Set to the class BooleanDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 110: You have to change the content of the function addOrderedSymbolFct in the class SymbolDesc (Package: de.dfki.mycbr.core.model)
General task, Nr. 111: You have to add the function removeAdditionalPoint to the class AdvancedDoubleFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 112: You have to add the function removeAdditionalPoint to the class AdvancedFloatFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 113: You have to add the function removeAdditionalPoint to the class AdvancedIntegerFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 114: You have to add the attribute LOGGER to the class OrderedSymbolFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 115: You have to add the attribute PARAM_DEL_COST to the class StringFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 116: You have to add the attribute PARAM_ADD_COST to the class StringFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 117: You have to add the attribute PARAM_CHANGE_COST to the class StringFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 118: You have to add the attribute LOGGER to the class SymbolFct (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 119: You have to add the attribute LOGGER to the class Taxonomy (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 120: You have to change the content of the function containsAsSubnode in the class Taxonomy (Package: de.dfki.mycbr.core.similarity)
General task, Nr. 121: You have to add the import java.util.Arrays to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 122: You have to add the attribute displayName to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 123: You have to add the attribute mins to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 124: You have to add the attribute maxs to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 125: You have to add the attribute useIntegers to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 126: You have to add the function isInteger to the class StringConfig (Package: de.dfki.mycbr.core.similarity.config)
General task, Nr. 127: You have to change the content of the function readData in the class CSVImporter (Package: de.dfki.mycbr.io)
General task, Nr. 128: You have to change the content of the inner class CSVThread in the main class CSVImporter (Package: de.dfki.mycbr.io)
General task, Nr. 129: You have to add the import java.text.ParseException to the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 130: You have to add the attribute importColumns to the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 131: You have to add the function DataBaseImporter to the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 132: You have to change the content of the function readData in the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 133: You have to change the content of the function checkData in the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 134: You have to change the content of the inner class DataBaseThread in the main class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 135: You have to add the inner class GeneralImportRunnable to the class DataBaseImporter (Package: de.dfki.mycbr.io)
General task, Nr. 136: You have to change the content of the function XMLImporter in the class XMLImporter (Package: de.dfki.mycbr.io)
General task, Nr. 137: You have to add the attribute driverURL to the class Database (Package: de.dfki.mycbr.util)
General task, Nr. 138: You have to change the content of the function getURL in the class Database (Package: de.dfki.mycbr.util)
